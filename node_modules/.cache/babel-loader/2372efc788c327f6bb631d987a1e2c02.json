{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuvan\\\\OneDrive\\\\Desktop\\\\alan_ai_news_application\\\\src\\\\components\\\\InfoCards\\\\InfoCards.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Grow, Typography } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst infoCards = [{\n  color: \"#00838f\",\n  title: \"Latest News\",\n  text: \"Give me the latest news\",\n  id: 1\n}, {\n  color: \"#00CED1\",\n  title: \"News by Categories\",\n  info: \"Business, Entertainment, General, Health, Science, Sports, Technology\",\n  text: \"Give me the latest Technology news\",\n  id: 2\n}, {\n  color: \"#FFA07A\",\n  title: \"News by Terms\",\n  info: \"Bitcoin, PlayStation 5, Smartphones, Donald Trump...\",\n  text: \"What's up with PlayStation 5\",\n  id: 3\n}, {\n  color: \"#283593\",\n  title: \"News by Sources\",\n  info: \"CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...\",\n  text: \"Give me news from CNN\",\n  id: 4\n}];\n\nconst InfoCard = () => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: infoCards.map(infoCard => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        className: classes.infoCard,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.card,\n          style: {\n            backgroundColor: infoCard.color\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: infoCard.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), infoCard.info ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [infoCard.title.split(\" \")[2], \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), infoCard.info]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Try Saying:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: infoCard.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, infoCard.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InfoCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = InfoCard;\nexport default InfoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoCard\");","map":{"version":3,"sources":["C:/Users/yuvan/OneDrive/Desktop/alan_ai_news_application/src/components/InfoCards/InfoCards.js"],"names":["Grid","Grow","Typography","useStyles","infoCards","color","title","text","id","info","InfoCard","classes","container","map","infoCard","card","backgroundColor","split"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,UAArB,QAAuC,mBAAvC;AAEA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,MAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,IAAI,EAAE,yBAHR;AAIEC,EAAAA,EAAE,EAAE;AAJN,CADgB,EAOhB;AACEH,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,oBAFT;AAGEG,EAAAA,IAAI,EAAE,uEAHR;AAIEF,EAAAA,IAAI,EAAE,oCAJR;AAKEC,EAAAA,EAAE,EAAE;AALN,CAPgB,EAchB;AACEH,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEG,EAAAA,IAAI,EAAE,sDAHR;AAIEF,EAAAA,IAAI,EAAE,8BAJR;AAKEC,EAAAA,EAAE,EAAE;AALN,CAdgB,EAqBhB;AACEH,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEG,EAAAA,IAAI,EAAE,wDAHR;AAIEF,EAAAA,IAAI,EAAE,uBAJR;AAKEC,EAAAA,EAAE,EAAE;AALN,CArBgB,CAAlB;;AA6BA,MAAME,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,MAAR;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,SAAS,EAAEQ,OAAO,CAACC,SADrB;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,UAAU,EAAC,SAHb;AAIE,MAAA,OAAO,EAAE,CAJX;AAAA,gBAMGR,SAAS,CAACS,GAAV,CAAeC,QAAD,iBACb,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,EAFN;AAGE,QAAA,EAAE,EAAE,CAHN;AAIE,QAAA,EAAE,EAAE,CAJN;AAKE,QAAA,EAAE,EAAE,CALN;AAME,QAAA,SAAS,EAAEH,OAAO,CAACG,QANrB;AAAA,+BASE;AACE,UAAA,SAAS,EAAEH,OAAO,CAACI,IADrB;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEF,QAAQ,CAACT;AAA5B,WAFT;AAAA,kCAIE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,sBAA0BS,QAAQ,CAACR;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAJF,EAQGQ,QAAQ,CAACL,IAAT,gBACC,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,oCACE;AAAA,yBAASK,QAAQ,CAACR,KAAT,CAAeW,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGH,QAAQ,CAACL,IAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAMG,IAdN,eAeE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,mDAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,oBAES;AAAA,wBAAKK,QAAQ,CAACP;AAAd;AAAA;AAAA;AAAA;AAAA,oBAFT;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF,SAOOO,QAAQ,CAACN,EAPhB;AAAA;AAAA;AAAA;AAAA,cADD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA9CD;;GAAME,Q;UACYP,S;;;KADZO,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import { Grid, Grow, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst infoCards = [\r\n  {\r\n    color: \"#00838f\",\r\n    title: \"Latest News\",\r\n    text: \"Give me the latest news\",\r\n    id: 1,\r\n  },\r\n  {\r\n    color: \"#00CED1\",\r\n    title: \"News by Categories\",\r\n    info: \"Business, Entertainment, General, Health, Science, Sports, Technology\",\r\n    text: \"Give me the latest Technology news\",\r\n    id: 2,\r\n  },\r\n  {\r\n    color: \"#FFA07A\",\r\n    title: \"News by Terms\",\r\n    info: \"Bitcoin, PlayStation 5, Smartphones, Donald Trump...\",\r\n    text: \"What's up with PlayStation 5\",\r\n    id: 3,\r\n  },\r\n  {\r\n    color: \"#283593\",\r\n    title: \"News by Sources\",\r\n    info: \"CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...\",\r\n    text: \"Give me news from CNN\",\r\n    id: 4,\r\n  },\r\n];\r\nconst InfoCard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grow in>\r\n      <Grid\r\n        className={classes.container}\r\n        container\r\n        alignItems=\"stretch\"\r\n        spacing={3}\r\n      >\r\n        {infoCards.map((infoCard) => (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n            lg={3}\r\n            className={classes.infoCard}\r\n            key={infoCard.id}\r\n          >\r\n            <div\r\n              className={classes.card}\r\n              style={{ backgroundColor: infoCard.color }}\r\n            >\r\n              <Typography variant=\"h5\">{infoCard.title}</Typography>\r\n              {/* if infoCard has the info take its title and split at every space and grab the 2nd element from it\r\n                ex. News by sources => sources\r\n                */}\r\n              {infoCard.info ? (\r\n                <Typography variant=\"h6\">\r\n                  <strong>{infoCard.title.split(\" \")[2]}:</strong>\r\n                  <br />\r\n                  {infoCard.info}\r\n                </Typography>\r\n              ) : null}\r\n              <Typography variant=\"h6\">\r\n                Try Saying:\r\n                <br /> <em>{infoCard.text}</em>\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default InfoCard;\r\n"]},"metadata":{},"sourceType":"module"}